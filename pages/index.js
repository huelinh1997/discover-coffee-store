import React, { useEffect, useState, useContext } from "react";
import Head from "next/head";
import Image from "next/image";

import Banner from "../components/Banner";
import Card from "../components/Card";
import styles from "../styles/Home.module.scss";
import coffeeStoresData from "./data/coffee-store.json";
import { getListCoffee } from "../service/coffee-store";
import useTrackLocation from "../hooks/use-track-location";
import { StoreContext, ACTION_TYPES } from "../store/store-context";

export default function Home({ coffeeStores }) {
  // const [storesNearMe, setStoreNearMe] = useState([]);
  const { handleTrackLocation, errLocationMsg, isFindingLocation } =
    useTrackLocation();
  const { dispatch, state } = useContext(StoreContext);
  const { coffeeStores: coffeeStoresNearMe, latLong } = state;
  const onClickViewStoreNearBy = () => {
    handleTrackLocation();
  };
  const getListCoffeeNearMe = async (latLong) => {
    try {
      const res = await fetch(
        `/api/coffee-store/near-me?latLong=${latLong}&limit=${30}`
      );
      const listCoffeeNearMe = await res.json();
      // setStoreNearMe(listCoffeeNearMe);
      dispatch({
        type: ACTION_TYPES.SET_COFFEE_STORES,
        payload: {
          coffeeStores: listCoffeeNearMe,
        },
      });
    } catch (error) {}
  };

  useEffect(() => {
    if (latLong) {
      getListCoffeeNearMe(latLong);
    }
  }, [latLong]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Banner
          handleOnClick={onClickViewStoreNearBy}
          buttonText={
            isFindingLocation ? "isLoading..." : "View stores near by"
          }
        />
        {errLocationMsg && <p>Something wrong: {errLocationMsg}</p>}
        <div className={styles.sectionWrapper}>
          <div className={styles.heroImage}>
            <Image
              src="/asset/images/hero-image.png"
              width="700"
              height="400"
              alt="banner"
            />
          </div>
          {coffeeStoresNearMe.length > 0 && (
            <>
              <h2 className={styles.heading2}>Stores near me:</h2>
              <div className={styles.cardLayout}>
                {coffeeStoresNearMe.map((coffeeStore) => {
                  return (
                    <Card
                      key={coffeeStore.id}
                      title={coffeeStore.name}
                      imageUrl={
                        coffeeStore.imgUrl || "/asset/images/image-default.jpeg"
                      }
                      link={`/coffee-store/${coffeeStore.id}`}
                      className={styles.card}
                    />
                  );
                })}
              </div>
            </>
          )}
          {coffeeStores.length && (
            <>
              <h2 className={styles.heading2}>Toronto stores:</h2>
              <div className={styles.cardLayout}>
                {coffeeStores.map((coffeeStore) => {
                  return (
                    <Card
                      key={coffeeStore.id}
                      title={coffeeStore.name}
                      imageUrl={
                        coffeeStore.imgUrl || "/asset/images/image-default.jpeg"
                      }
                      link={`/coffee-store/${coffeeStore.id}`}
                      className={styles.card}
                    />
                  );
                })}
              </div>
            </>
          )}
        </div>
      </main>
    </div>
  );
}

export async function getStaticProps() {
  // Call an external API endpoint to get posts.
  // You can use any data fetching library
  // const res = await fetch("https://.../posts");
  // const posts = await res.json();

  // By returning { props: { posts } }, the Blog component
  // will receive `posts` as a prop at build time

  const coffeeStores = await getListCoffee();

  return {
    props: {
      coffeeStores,
    },
  };
}
